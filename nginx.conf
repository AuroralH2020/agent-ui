server {
	listen 80;
	root /usr/share/nginx/html;
	index index.html index.htm;
	server_name localhost;

	location /en/ {
		autoindex on;
		try_files $uri$args $uri$args/ /en/index.html;
	}
	# Default to EN
	location / {
		# Autoindex is disabled here + the $uri$args/ is missing from try_files
		try_files $uri$args /en/index.html;
	}
	# REALLY important for JavaScript modules (type="module") to work as expected!!!
	location ~ \.js {
	    add_header  Content-Type   text/javascript;
	}
}

# server {

#         # Sets our default language (it's the angular template default language)
#         set $defaultLang "en";

#         listen 80;

#         root /usr/share/nginx/html;
#         index index.html;
#         include /etc/nginx/mime.types;

#         ################## IMPORTANT (don't change this) ##################

#         # Make sure when routing to location, server uses the correct angular project subfolder
#         # Matches the following urls:
#         # http://localhost/de
#         # http://localhost/de/
#         # http://localhost/de/login
#         # http://localhost/notexist/login => In this case, try_files doesn't found a matching index.html and jumps into the @languageFallback
#         location ~ "^(/([a-z]{2,2})/)(/?.*)?$" {
#           try_files $uri $uri /$2/index.html @languageFallback;
#         }

#         # Make sure when routing to the root the root index is used (and we redirect through the small JS script -> redirect.js)
#         # Matches the following urls:
#         # http://localhost
#         # http://localhost/
#         location / {
#           try_files $uri $uri/ /index.html;
#         }

#         # Language fallback which is used when user tries to open a language which doesn't exist
#         # E.g When user trying to open http://localhost/notexist/login but it doesnt exist, then we rewrite the url to
#         # http://localhost/de/login
#         location @languageFallback {
#           rewrite "^(/([a-z]{2,2})/)(/?.*)?$" $scheme://$http_host/$defaultLang/$3 last;
#         }
#     }